// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    ADMIN
    CUSTOMER
    MERCHANT
}

model User {
    id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    email     String   @unique
    name      String
    password  String
    role      Role     @default(CUSTOMER)
    company   Company?
    address   Address?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Address {
    id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    street    String
    city      String
    state     String
    postcode  Int
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique @db.Uuid
    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model Company {
    id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name      String
    email     String
    phone     String
    ssm       String
    user      User      @relation(fields: [userId], references: [id])
    userId    String    @unique @db.Uuid
    product   Product[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Product {
    id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String
    description String
    quantity    Int
    price       Float
    company     Company  @relation(fields: [companyId], references: [id])
    companyId   String   @db.Uuid
    image       Image[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Image {
    id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    url       String
    product   Product? @relation(fields: [productId], references: [id])
    productId String?  @db.Uuid
    createdAt DateTime @default(now())
}